#!/bin/bash
stty -ixon # Disable ctrl-s and ctrl-q.

shopt -s autocd #Allows you to cd into directory merely by typing the directory name.
shopt -s checkwinsize

HISTSIZE= HISTFILESIZE= # Infinite history.

export PROMPT_COMMAND=hexgnu_prompt

function termwide {
local GRAY="\[\033[1;30m\]"
local LIGHT_GRAY="\[\033[0;37m\]"
local WHITE="\[\033[1;37m\]"
local NO_COLOUR="\[\033[0m\]"
local CYAN="\[\033[0;36m\]"
local LIGHT_CYAN="\[\033[1;36m\]"
local NO_COLOR="\[\033[0m\]"
local MAGENTA="\[\033[1;35m\]"

local LIGHT_BLUE="\[\033[1;34m\]"
local YELLOW="\[\033[1;33m\]"

case $TERM in
    xterm*)
        TITLEBAR='\[\033]0;\u@\h:\w\007\]'
        ;;
    *)
        TITLEBAR=""
        ;;
esac

PS1="$TITLEBAR\
$MAGENTA\${PWD}\
$YELLOW (\$(date +%H:%M))\
$LIGHT_GRAY \$${LIGHT_GRAY} "

PS2="$LIGHT_CYAN-$CYAN-$GRAY-$NO_COLOUR "

}

termwide

function cat {
	highlight --out-format=ansi $* 2> /dev/null || /usr/bin/cat $*
}


alias diff="diff --color=auto" \
      dnf="sudo dnf" \
      docker='sudo -E docker' \
      docker-compose='sudo -E docker-compose' \
      e="$EDITOR" \
      g="git" \
      gb="git branch | grep '*' | cut -d ' ' -f 2" \
      grep="grep --color=auto" \
      gs="git status" \
      gua="git remote | xargs -L1 git push --all" \
      ipy="ipython" \
      jn="jupyter notebook" \
      ls="ls --color=auto" \
      pbcopy='xclip -selection clipboard' \
      pbpaste='xclip -selection clipboard -o' \
      v="$EDITOR" \

command -v nvim >/dev/null && alias vim="nvim" vimdiff="nvim -d" # Use neovim for vim if present.

if [ -f ~/.git-completion.bash ]; then
  . ~/.git-completion.bash &> /dev/null
fi

# This fixes the gpg2 problems I was encountering
if [ -e /run/user/1000/gnupg/S.gpg-agent.ssh ] && [ -n "$(pgrep gpg-agent)" ]; then
    SSH_AUTH_SOCK=/run/user/1000/gnupg/S.gpg-agent.ssh; export SSH_AUTH_SOCK;
    GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1; export GPG_AGENT_INFO;
else
    eval $(gpg-agent --daemon --enable-ssh-support) &> /dev/null
fi

export GPG_TTY=$(tty)
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PATH:$PYENV_ROOT/bin"
# I'd like to get rid of these... tbh


_direnv_hook() {
  local previous_exit_status=$?;
  eval "$(direnv export bash)";
  return $previous_exit_status;
};
if ! [[ "$PROMPT_COMMAND" =~ _direnv_hook ]]; then
  PROMPT_COMMAND="_direnv_hook;$PROMPT_COMMAND";
fi

export PATH="/home/hexgnu/.pyenv/shims:${PATH}"
export PYENV_SHELL=bash
source '/home/hexgnu/.pyenv/libexec/../completions/pyenv.bash'
pyenv() {
  local command
  command="${1:-}"
  if [ "$#" -gt 0 ]; then
    shift
  fi

  case "$command" in
  rehash|shell)
    eval "$(pyenv "sh-$command" "$@")";;
  *)
    command pyenv "$command" "$@";;
  esac
}
