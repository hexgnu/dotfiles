[core]
    editor       = vim
    excludesfile = ~/.git/gitignore
    autocrlf     = false
    filemode     = false

[user]
    name  = Matthew Kirk
    email = matt@matthewkirk.com
    signingkey = 93A82F4A27594B09

[diff]
    tool = vimdiff

[pager]
    diff =

[commit]
    template = ~/.git/git-commit-template.txt
    strip = true
    gpgsign = true

[alias]
    a     = add
    au    = add -u
    b     = branch
    bi    = bisect
    bl    = blame
    c     = commit
    cl    = clone
    co    = checkout
    cp    = cherry-pick
    d     = diff --no-ext-diff
    dc    = describe --contains
    dc    = diff --no-ext-diff --cached
    ds    = diff --no-ext-diff --stat
    dsc   = diff --no-ext-diff --stat --cached
    dt    = difftool
    f     = fetch
    fp    = format-patch
    g     = grep
    h     = help
    l     = log --graph --pretty='%C(242)%h %C(156)%s %C(242)[%C(248)%an%C(242), %C(248)%ar%C(242)]' --decorate --date=relative -50
    la    = log --graph --all --oneline --decorate --date=relative -50
    lsr   = ls-remote
    m     = merge
    p     = push
    pl    = pull --ff-only
    r     = reset
    rank  = shortlog -sn --no-merges
    rem   = remote
    re    = rebase
    rc    = rebase --continue
    rs    = rebase --skip
    ra    = rebase --abort
    ri    = rebase -i
    rl    = rev-list
    s     = status -uno
    sb    = show-branch
    sh    = show
    snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
    ss    = status
    st    = stash
    t     = tag
    vd    = diff
    w     = whatchanged -50
    what  = show -s --pretty='tformat:%h (%s, %ad)' --date=short
    whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"

    root = rev-parse --show-toplevel

    upstream = !git for-each-ref --format='%(upstream:short)' $(git symbolic-ref -q HEAD)
    upstream-remote = !git upstream | sed -e 's/\\/.*$//g'

    ours   = "!f() { git checkout --ours $@ && git add $@; }; f"
    theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"

    plog = "log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all"

[advice]
    statusHints = no

[rerere]
    enabled = false

[color]
    branch      = auto
    diff        = auto
    interactive = auto
    status      = auto
    ui          = auto

[color "diff"]
    frag       = 104
    func       = 74
    meta       = 137 bold
    new        = 114
    old        = 167
    plain      = 240
    whitespace = 24 24

[color "status"]
    header = 240
    branch = yellow

[init]
    templatedir = ~/.git/template

[push]
    default = simple

[url "git://github.com/ghc/packages-"]
    insteadOf = git://github.com/ghc/packages/
[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f
[gpg]
	program = gpg2
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
